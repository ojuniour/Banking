//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BektekInc.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class bankEntities : DbContext
    {
        public bankEntities()
            : base("name=bankEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<customersDetail> customersDetails { get; set; }
        public virtual DbSet<department> departments { get; set; }
        public virtual DbSet<EmpDemo> EmpDemoes { get; set; }
        public virtual DbSet<employee> employees { get; set; }
        public virtual DbSet<orderAudit_Valentine> orderAudit_Valentine { get; set; }
        public virtual DbSet<orderDetails_Valentine> orderDetails_Valentine { get; set; }
        public virtual DbSet<orderHeader_Valentine> orderHeader_Valentine { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<tblEmployee> tblEmployees { get; set; }
        public virtual DbSet<love> loves { get; set; }
    
        [DbFunction("bankEntities", "logger1")]
        public virtual IQueryable<logger1_Result> logger1(Nullable<int> test)
        {
            var testParameter = test.HasValue ?
                new ObjectParameter("test", test) :
                new ObjectParameter("test", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<logger1_Result>("[bankEntities].[logger1](@test)", testParameter);
        }
    
        public virtual int EmpDemo_para(string ename, Nullable<decimal> salary, Nullable<int> deptno, ObjectParameter empno)
        {
            var enameParameter = ename != null ?
                new ObjectParameter("ename", ename) :
                new ObjectParameter("ename", typeof(string));
    
            var salaryParameter = salary.HasValue ?
                new ObjectParameter("salary", salary) :
                new ObjectParameter("salary", typeof(decimal));
    
            var deptnoParameter = deptno.HasValue ?
                new ObjectParameter("deptno", deptno) :
                new ObjectParameter("deptno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EmpDemo_para", enameParameter, salaryParameter, deptnoParameter, empno);
        }
    
        public virtual ObjectResult<get_EmpData_Result> get_EmpData(Nullable<int> deptNo)
        {
            var deptNoParameter = deptNo.HasValue ?
                new ObjectParameter("deptNo", deptNo) :
                new ObjectParameter("deptNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_EmpData_Result>("get_EmpData", deptNoParameter);
        }
    
        public virtual int ins_dept(Nullable<int> dept_id, string dept_name)
        {
            var dept_idParameter = dept_id.HasValue ?
                new ObjectParameter("dept_id", dept_id) :
                new ObjectParameter("dept_id", typeof(int));
    
            var dept_nameParameter = dept_name != null ?
                new ObjectParameter("dept_name", dept_name) :
                new ObjectParameter("dept_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ins_dept", dept_idParameter, dept_nameParameter);
        }
    
        public virtual int ins_empl(Nullable<int> empid, string empname, Nullable<int> empage, Nullable<int> empsalary, Nullable<int> empdept_id)
        {
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            var empnameParameter = empname != null ?
                new ObjectParameter("empname", empname) :
                new ObjectParameter("empname", typeof(string));
    
            var empageParameter = empage.HasValue ?
                new ObjectParameter("empage", empage) :
                new ObjectParameter("empage", typeof(int));
    
            var empsalaryParameter = empsalary.HasValue ?
                new ObjectParameter("empsalary", empsalary) :
                new ObjectParameter("empsalary", typeof(int));
    
            var empdept_idParameter = empdept_id.HasValue ?
                new ObjectParameter("empdept_id", empdept_id) :
                new ObjectParameter("empdept_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ins_empl", empidParameter, empnameParameter, empageParameter, empsalaryParameter, empdept_idParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
